{"version":3,"sources":["webpack:///./src/views/components/Monitoring.vue","webpack:///./src/api.service.js","webpack:///src/views/components/Monitoring.vue","webpack:///./src/views/components/Monitoring.vue?dd18","webpack:///./src/views/components/Monitoring.vue?5ac3","webpack:///./node_modules/vuetify/lib/components/VGrid/VContainer.js","webpack:///./node_modules/core-js/modules/es.iterator.map.js","webpack:///./src/views/components/Monitoring.vue?5550","webpack:///./node_modules/vuetify/lib/components/VGrid/grid.js","webpack:///./node_modules/core-js/modules/es.iterator.find.js"],"names":["staticClass","_c","index","attrs","style","backgroundColor","staticStyle","_vm","_s","card","on","model","value","selectedAccessPoint","callback","key","fn","item","staticRenderFns","render","ApiService","getCountCurrentlyConnectedUsers","http","get","getCountCurrentlyConnectedAPs","getTotalUserConnectionsToday","getTotalBandwidthConsumptionToday","getAverageConnectionTime","getAverageBandwidthPerConnection","getCountCurrentlyConnectedUsersPerAP","getCurrentlyConnectedUsersPerAP","getAccessPoints","name","data","cardsOverallSummary","title","color","cardsAP","headers","text","align","sortable","connectedUsersPerAP","connectedUsersPerAPMap","connectedUsers","allConnectedUsersData","currentConnectedAPs","accessPointOptions","loading","fetchInterval","computed","formattedAccessPointOptions","map","macRaw","split","formattedMac","formatMacAddress","fetchData","setInterval","beforeDestroy","clearInterval","methods","countConnectedUsersResponse","countConnectedAPsResponse","totalUserConnectionsTodayResponse","totalBandwidthConsumptionTodayResponse","avgConnectionTimeResponse","avgBandwidthConnectionResponse","countConnectedUsersPerApResponse","connectedUsersPerApResponse","accessPointsResponse","Promise","all","currentlyConnectedUsers","currentlyConnectedAPs","totalUserConnectionsToday","totalBandwidthConsumptionToday","averageConnectionTime","averageBandwidthPerConnection","forEach","calledStationId","accessPoints","ap","length","loadUsersForSelectedAP","error","console","onAPChange","_apData$currently_con","apData","find","called_station_id","currently_connected_users","user","timestamp","Number","formatTimestamp","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","mac","_cleaned$match","cleaned","replace","toUpperCase","match","join","component","extend","functional","props","id","tag","type","default","fluid","Boolean","h","children","classes","Object","keys","filter","startsWith","domProps","class","Array","concat","$","call","aCallable","anObject","getIteratorDirect","createIteratorProxy","callWithSafeIterationClosing","iteratorClose","iteratorHelperWithoutClosingOnEarlyError","IS_PURE","mapWithoutClosingOnEarlyError","TypeError","IteratorProxy","iterator","this","result","next","done","mapper","counter","target","proto","real","forced","VGrid","trim","iterate","findWithoutClosingOnEarlyError","predicate","record","stop","IS_RECORD","INTERRUPTED"],"mappings":"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","file":"js/chunk-5901b353.8d761919.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-container',{staticClass:\"pa-5\",attrs:{\"fluid\":\"\"}},[_c('v-card',{staticClass:\"pa-4 mb-6\"},[_c('v-card-title',{staticClass:\"pa-0\"},[_vm._v(\" Overall Summary \")]),_c('v-row',_vm._l((_vm.cardsOverallSummary),function(card,index){return _c('v-col',{key:index,attrs:{\"cols\":\"12\",\"sm\":\"6\",\"md\":\"4\"}},[_c('v-card',{style:({backgroundColor: card.color})},[_c('v-card-title',{staticClass:\"font-weight-bold text-h3 text-right\",staticStyle:{\"text-align\":\"right\",\"display\":\"block\",\"color\":\"white\"}},[_vm._v(\" \"+_vm._s(card.value)+\" \")]),_c('v-card-text',{staticClass:\"text-right text-subtitle-2\",staticStyle:{\"color\":\"white\"}},[_vm._v(\" \"+_vm._s(card.title)+\" \")])],1)],1)}),1)],1),_c('v-card',{staticClass:\"pa-4 mb-6\"},[_c('v-row',{staticClass:\"ma-0\",attrs:{\"align\":\"center\"}},[_c('v-col',{staticClass:\"pa-0\"},[_c('v-card-title',{staticClass:\"pa-0 mb-3\"},[_vm._v(\" List of Access Points \")])],1),_c('v-col',{staticClass:\"pa-0\",attrs:{\"cols\":\"auto\"}},[_c('v-select',{staticStyle:{\"width\":\"20em\"},attrs:{\"flat\":\"\",\"solo-inverted\":\"\",\"hide-details\":\"\",\"items\":_vm.formattedAccessPointOptions,\"item-text\":\"text\",\"item-value\":\"value\",\"label\":\"Select Access Point (AP)\"},on:{\"change\":_vm.onAPChange},model:{value:(_vm.selectedAccessPoint),callback:function ($$v) {_vm.selectedAccessPoint=$$v},expression:\"selectedAccessPoint\"}})],1)],1),_c('v-col',{staticClass:\"pa-0\"},[_c('v-row',_vm._l((_vm.cardsAP),function(card,index){return _c('v-col',{key:index,attrs:{\"cols\":\"12\",\"sm\":\"6\",\"md\":\"4\"}},[_c('v-card',{style:({backgroundColor: card.color})},[_c('v-card-title',{staticClass:\"font-weight-bold text-h3 text-right\",staticStyle:{\"text-align\":\"right\",\"display\":\"block\",\"color\":\"white\"}},[_vm._v(\" \"+_vm._s(card.value)+\" \")]),_c('v-card-text',{staticClass:\"text-right text-subtitle-2\",staticStyle:{\"color\":\"white\"}},[_vm._v(\" \"+_vm._s(card.title)+\" \")])],1)],1)}),1),_c('v-card',{staticClass:\"mt-3\"},[_c('v-card-title',[_vm._v(\" List of Currently Connected Users \")]),_c('div',{staticStyle:{\"overflow-x\":\"auto\"}},[_c('v-data-table',{staticClass:\"header-nowrap\",staticStyle:{\"min-width\":\"1000px\"},attrs:{\"dense\":\"\",\"headers\":_vm.headers,\"items\":_vm.connectedUsers,\"item-key\":\"macAddress\",\"loading\":_vm.loading,\"loading-text\":\"Loading... Please wait\"},scopedSlots:_vm._u([{key:\"item.bandwidthMB\",fn:function({item}){return [_vm._v(\" \"+_vm._s(item.bandwidthMB)+\" \")]}},{key:\"item.timestamp\",fn:function({item}){return [_vm._v(\" \"+_vm._s(_vm.formatTimestamp(item.timestamp))+\" \")]}},{key:\"item.calling_station_id\",fn:function({item}){return [_vm._v(\" \"+_vm._s(_vm.formatMacAddress(item.calling_station_id))+\" \")]}}])})],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import http from './http-common';\r\n\r\n/* eslint-disable class-methods-use-this */\r\nclass ApiService {\r\n  // FOR CAPTIVE PORTAL (WIFIDOG) DATA RETRIEVAL APIs\r\n  // getCountCurrentlyConnectedUsers() {\r\n  //   return http.get('/api/count-current-connected-users');\r\n  // }\r\n\r\n  // getCountCurrentlyConnectedAPs() {\r\n  //   return http.get('/api/count-current-connected-aps');\r\n  // }\r\n\r\n  // getTotalUserConnectionsToday() {\r\n  //   return http.get('/api/total-user-connections-today');\r\n  // }\r\n\r\n  // getTotalBandwidthConsumptionToday() {\r\n  //   return http.get('/api/total-bandwidth-consumption-today');\r\n  // }\r\n\r\n  // getAverageConnectionTime() {\r\n  //   return http.get('/api/avg-connection-time');\r\n  // }\r\n\r\n  // getAverageBandwidthPerConnection() {\r\n  //   return http.get('/api/average-bandwidth-per-connection');\r\n  // }\r\n\r\n  // getCountCurrentlyConnectedUsersPerAP() {\r\n  //   return http.get('/api/count-current-connected-users-per-ap');\r\n  // }\r\n\r\n  // getCurrentlyConnectedUsersPerAP() {\r\n  //   return http.get('/api/current-connected-users-per-ap');\r\n  // }\r\n\r\n  // getAccessPoints() {\r\n  //   return http.get('/api/current-connected-aps');\r\n  // }\r\n\r\n  // FOR RADIUS DATA RETRIEVAL APIs\r\n  getCountCurrentlyConnectedUsers() {\r\n    return http.get('/api/radius/count-currently-connected-users');\r\n  }\r\n\r\n  getCountCurrentlyConnectedAPs() {\r\n    return http.get('/api/radius/count-currently-connected-aps');\r\n  }\r\n\r\n  getTotalUserConnectionsToday() {\r\n    return http.get('/api/radius/total-user-connections-today');\r\n  }\r\n\r\n  getTotalBandwidthConsumptionToday() {\r\n    return http.get('/api/radius/total-bandwidth-consumption-today');\r\n  }\r\n\r\n  getAverageConnectionTime() {\r\n    return http.get('/api/radius/average-connection-time');\r\n  }\r\n\r\n  getAverageBandwidthPerConnection() {\r\n    return http.get('/api/radius/average-bandwidth-per-connection');\r\n  }\r\n\r\n  getCountCurrentlyConnectedUsersPerAP() {\r\n    return http.get('/api/radius/count-currently-connected-users-per-ap');\r\n  }\r\n\r\n  getCurrentlyConnectedUsersPerAP() {\r\n    return http.get('/api/radius/currently-connected-users-per-ap');\r\n  }\r\n\r\n  getAccessPoints() {\r\n    return http.get('/api/radius/access-points');\r\n  }\r\n}\r\n/* eslint-enable class-methods-use-this */\r\n\r\nexport default new ApiService();\r\n","<template>\r\n  <v-container\r\n    fluid\r\n    class=\"pa-5\"\r\n  >\r\n    <!-- Overall Summary -->\r\n    <v-card class=\"pa-4 mb-6\">\r\n      <v-card-title class=\"pa-0\">\r\n        Overall Summary\r\n      </v-card-title>\r\n      <v-row>\r\n        <v-col\r\n          v-for=\"(card, index) in cardsOverallSummary\"\r\n          :key=\"index\"\r\n          cols=\"12\"\r\n          sm=\"6\"\r\n          md=\"4\"\r\n        >\r\n          <v-card\r\n            :style=\"{backgroundColor: card.color}\"\r\n          >\r\n            <v-card-title\r\n              class=\"font-weight-bold text-h3 text-right\"\r\n              style=\"text-align: right; display: block; color: white;\"\r\n            >\r\n              {{ card.value }}\r\n            </v-card-title>\r\n            <v-card-text\r\n              class=\"text-right text-subtitle-2\"\r\n              style=\"color: white;\"\r\n            >\r\n              {{ card.title }}\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </v-card>\r\n\r\n    <!-- List of APs / Data per AP -->\r\n    <v-card class=\"pa-4 mb-6\">\r\n      <v-row\r\n        align=\"center\"\r\n        class=\"ma-0\"\r\n      >\r\n        <v-col class=\"pa-0\">\r\n          <v-card-title class=\"pa-0 mb-3\">\r\n            List of Access Points\r\n          </v-card-title>\r\n        </v-col>\r\n        <v-col\r\n          class=\"pa-0\"\r\n          cols=\"auto\"\r\n        >\r\n          <!-- NOTE: uncomment if the select options data in the future doesn't need formatting -->\r\n          <!-- <v-select\r\n            v-model=\"selectedAccessPoint\"\r\n            flat\r\n            solo-inverted\r\n            hide-details\r\n            :items=\"accessPointOptions\"\r\n            item-text=\"text\"\r\n            item-value=\"value\"\r\n            style=\"width: 20em;\"\r\n            label=\"Select Access Point (AP)\"\r\n            @change=\"onAPChange\"\r\n          /> -->\r\n          <v-select\r\n            v-model=\"selectedAccessPoint\"\r\n            flat\r\n            solo-inverted\r\n            hide-details\r\n            :items=\"formattedAccessPointOptions\"\r\n            item-text=\"text\"\r\n            item-value=\"value\"\r\n            style=\"width: 20em;\"\r\n            label=\"Select Access Point (AP)\"\r\n            @change=\"onAPChange\"\r\n          />\r\n        </v-col>\r\n      </v-row>\r\n      <v-col class=\"pa-0\">\r\n        <v-row>\r\n          <v-col\r\n            v-for=\"(card, index) in cardsAP\"\r\n            :key=\"index\"\r\n            cols=\"12\"\r\n            sm=\"6\"\r\n            md=\"4\"\r\n          >\r\n            <v-card\r\n              :style=\"{backgroundColor: card.color}\"\r\n            >\r\n              <v-card-title\r\n                class=\"font-weight-bold text-h3 text-right\"\r\n                style=\"text-align: right; display: block; color: white;\"\r\n              >\r\n                {{ card.value }}\r\n              </v-card-title>\r\n              <v-card-text\r\n                class=\"text-right text-subtitle-2\"\r\n                style=\"color: white;\"\r\n              >\r\n                {{ card.title }}\r\n              </v-card-text>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n\r\n        <!-- Table for list of currently connected users per access point -->\r\n        <v-card class=\"mt-3\">\r\n          <v-card-title>\r\n            List of Currently Connected Users\r\n            <!-- <v-spacer />\r\n            <v-text-field\r\n              v-model=\"search\"\r\n              append-icon=\"mdi-magnify\"\r\n              label=\"Search\"\r\n              single-line\r\n              hide-details\r\n            /> -->\r\n          </v-card-title>\r\n          <div style=\"overflow-x: auto;\">\r\n            <v-data-table\r\n              dense\r\n              :headers=\"headers\"\r\n              :items=\"connectedUsers\"\r\n              item-key=\"macAddress\"\r\n              :loading=\"loading\"\r\n              loading-text=\"Loading... Please wait\"\r\n              style=\"min-width: 1000px\"\r\n              class=\"header-nowrap\"\r\n            >\r\n              <template v-slot:item.bandwidthMB=\"{item}\">\r\n                {{ item.bandwidthMB }}\r\n              </template>\r\n\r\n              <template v-slot:item.timestamp=\"{item}\">\r\n                {{ formatTimestamp(item.timestamp) }}\r\n              </template>\r\n\r\n              <template v-slot:item.calling_station_id=\"{item}\">\r\n                {{ formatMacAddress(item.calling_station_id) }}\r\n              </template>\r\n            </v-data-table>\r\n          </div>\r\n        </v-card>\r\n      </v-col>\r\n    </v-card>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport ApiService from '../../api.service';\r\n\r\nexport default {\r\n  name: 'MonitoringDashboard',\r\n  data() {\r\n    return {\r\n      cardsOverallSummary: [\r\n        {\r\n          title: 'Currently Connected Users',\r\n          value: 0,\r\n          color: '#66BB6A',\r\n          key: 'connectedUsers',\r\n        },\r\n        {\r\n          title: 'Currently Connected Access Points',\r\n          value: 0,\r\n          color: '#4DB6AC',\r\n          key: 'connectedAPs',\r\n        },\r\n        {\r\n          title: 'Total User Connections Today',\r\n          value: 0,\r\n          color: '#FFB74D',\r\n          key: 'totalUserConnectionsToday',\r\n        },\r\n        {\r\n          title: 'Total Bandwidth Consumption Today',\r\n          value: 0,\r\n          color: '#FDD835',\r\n          key: 'totalBandwidthConsumptionToday',\r\n        },\r\n        {\r\n          title: 'Average Connection Time',\r\n          value: 0,\r\n          color: '#1E88E5',\r\n          key: 'averageConnectionTime',\r\n        },\r\n        {\r\n          title: 'Average Bandwidth Per Connection',\r\n          value: 0,\r\n          color: '#E57373',\r\n          key: 'averageBandwidthPerConnection',\r\n        },\r\n      ],\r\n      cardsAP: [\r\n        {\r\n          title: 'Currently Connected Users',\r\n          value: 0,\r\n          color: '#66BB6A',\r\n          key: 'connectedUsersPerAP',\r\n        },\r\n      ],\r\n      // NOTE: commented since this displays data retrieved from the wifidog (captive portal) database\r\n      // headers: [\r\n      //   {\r\n      //     text: 'Account Number',\r\n      //     align: 'start',\r\n      //     sortable: true,\r\n      //     value: 'accountNumber',\r\n      //   },\r\n      //   {\r\n      //     text: 'Package',\r\n      //     align: 'start',\r\n      //     sortable: true,\r\n      //     value: 'package',\r\n      //   },\r\n      //   {\r\n      //     text: 'MAC Address',\r\n      //     align: 'start',\r\n      //     sortable: true,\r\n      //     value: 'macAddress',\r\n      //   },\r\n      //   {\r\n      //     text: 'Device',\r\n      //     align: 'start',\r\n      //     sortable: false,\r\n      //     value: 'device',\r\n      //   },\r\n      //   {\r\n      //     text: 'IP Address',\r\n      //     align: 'start',\r\n      //     sortable: true,\r\n      //     value: 'ipAddress',\r\n      //   },\r\n      //   {\r\n      //     text: 'SSID',\r\n      //     align: 'start',\r\n      //     sortable: true,\r\n      //     value: 'ssid',\r\n      //   },\r\n      //   {\r\n      //     text: 'Bandwidth Consumption',\r\n      //     align: 'start',\r\n      //     sortable: true,\r\n      //     value: 'bandwidthMB',\r\n      //   },\r\n      //   {\r\n      //     text: 'Time Connected',\r\n      //     align: 'start',\r\n      //     sortable: true,\r\n      //     value: 'lastActive',\r\n      //   },\r\n      // ],\r\n      headers: [\r\n        {\r\n          text: 'Username',\r\n          align: 'start',\r\n          sortable: true,\r\n          value: 'username',\r\n        },\r\n        {\r\n          text: 'Account Input Octets',\r\n          align: 'start',\r\n          sortable: true,\r\n          value: 'acctinputoctets',\r\n        },\r\n        {\r\n          text: 'Account Output Octets',\r\n          align: 'start',\r\n          sortable: true,\r\n          value: 'acctoutputoctets',\r\n        },\r\n        {\r\n          text: 'NAS Port',\r\n          align: 'start',\r\n          sortable: false,\r\n          value: 'nasport',\r\n        },\r\n        {\r\n          text: 'Calling Station ID',\r\n          align: 'start',\r\n          sortable: true,\r\n          value: 'calling_station_id',\r\n        },\r\n        {\r\n          text: 'Timestamp',\r\n          align: 'start',\r\n          sortable: true,\r\n          value: 'timestamp',\r\n        },\r\n      ],\r\n      connectedUsersPerAP: 0,\r\n      connectedUsersPerAPMap: {},\r\n      connectedUsers: [],\r\n      allConnectedUsersData: [],\r\n      currentConnectedAPs: [],\r\n      accessPointOptions: [],\r\n      selectedAccessPoint: null,\r\n      loading: false,\r\n      fetchInterval: null,\r\n    };\r\n  },\r\n  computed: {\r\n    formattedAccessPointOptions() {\r\n      return this.accessPointOptions.map((item) => {\r\n        const [macRaw, name] = item.value.split(':');\r\n        const formattedMac = this.formatMacAddress(macRaw);\r\n        return {\r\n          text: `${formattedMac} - ${name}`,\r\n          value: item.value,\r\n        };\r\n      });\r\n    },\r\n  },\r\n  async created() {\r\n    await this.fetchData();\r\n\r\n    // Fetch data every 30 seconds\r\n    this.fetchInterval = setInterval(() => {\r\n      this.fetchData();\r\n    }, 30000);\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.fetchInterval);\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      try {\r\n        this.loading = true;\r\n\r\n        // Fetch all data in parallel\r\n        const [\r\n          countConnectedUsersResponse,\r\n          countConnectedAPsResponse,\r\n          totalUserConnectionsTodayResponse,\r\n          totalBandwidthConsumptionTodayResponse,\r\n          avgConnectionTimeResponse,\r\n          avgBandwidthConnectionResponse,\r\n          countConnectedUsersPerApResponse,\r\n          connectedUsersPerApResponse,\r\n          accessPointsResponse,\r\n        ] = await Promise.all([\r\n          ApiService.getCountCurrentlyConnectedUsers(),\r\n          ApiService.getCountCurrentlyConnectedAPs(),\r\n          ApiService.getTotalUserConnectionsToday(),\r\n          ApiService.getTotalBandwidthConsumptionToday(),\r\n          ApiService.getAverageConnectionTime(),\r\n          ApiService.getAverageBandwidthPerConnection(),\r\n          ApiService.getCountCurrentlyConnectedUsersPerAP(),\r\n          ApiService.getCurrentlyConnectedUsersPerAP(),\r\n          ApiService.getAccessPoints(),\r\n        ]);\r\n\r\n        // Update overall summary cards\r\n        this.cardsOverallSummary[0].value = countConnectedUsersResponse.data.currentlyConnectedUsers;\r\n        this.cardsOverallSummary[1].value = countConnectedAPsResponse.data.currentlyConnectedAPs;\r\n        this.cardsOverallSummary[2].value = totalUserConnectionsTodayResponse.data.totalUserConnectionsToday;\r\n        this.cardsOverallSummary[3].value = totalBandwidthConsumptionTodayResponse.data.totalBandwidthConsumptionToday;\r\n        this.cardsOverallSummary[4].value = avgConnectionTimeResponse.data.averageConnectionTime;\r\n        this.cardsOverallSummary[5].value = avgBandwidthConnectionResponse.data.averageBandwidthPerConnection;\r\n\r\n        // Convert array to map\r\n        this.connectedUsersPerAPMap = {};\r\n        countConnectedUsersPerApResponse.data.forEach((item) => {\r\n          // NOTE: commented since this displays data retrieved from the wifidog (captive portal) database\r\n          // this.connectedUsersPerAPMap[item.apMacAddress] = item.userCount;\r\n          this.connectedUsersPerAPMap[item.calledStationId] = item.currentlyConnectedUsers;\r\n        });\r\n\r\n        // Store all connected users data\r\n        this.allConnectedUsersData = connectedUsersPerApResponse.data;\r\n\r\n        // Setup options for the select field\r\n        // NOTE: commented since this displays data retrieved from the wifidog (captive portal) database\r\n        // this.currentConnectedAPs = currentConnectedAPs.data.data;\r\n        // this.accessPointOptions = this.currentConnectedAPs.map((ap) => ({\r\n        //   text: ap,\r\n        //   value: ap,\r\n        // }));\r\n        this.accessPointOptions = accessPointsResponse.data.accessPoints.map((ap) => ({\r\n          text: ap,\r\n          value: ap,\r\n        }));\r\n\r\n        // Pre-select the first access point\r\n        // NOTE: commented since this displays data retrieved from the wifidog (captive portal) database\r\n        // if (this.accessPointOptions.length > 0) {\r\n        //   this.selectedAccessPoint = this.accessPointOptions[0].value;\r\n        //   this.connectedUsersPerAP = this.connectedUsersPerAPMap[this.selectedAccessPoint] || 0;\r\n        //   this.cardsAP[0].value = this.connectedUsersPerAP;\r\n        //   this.loadUsersForSelectedAP();\r\n        // }\r\n        if (this.accessPointOptions.length > 0) {\r\n          this.selectedAccessPoint = this.accessPointOptions[0].value;\r\n          this.loadUsersForSelectedAP();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data: ', error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    onAPChange(selectedAccessPoint) {\r\n      this.selectedAccessPoint = selectedAccessPoint;\r\n      this.loadUsersForSelectedAP();\r\n    },\r\n    loadUsersForSelectedAP() {\r\n      if (!this.selectedAccessPoint) return;\r\n      // Update the count of connected users\r\n      this.connectedUsersPerAP = this.connectedUsersPerAPMap[this.selectedAccessPoint] || 0;\r\n      this.cardsAP[0].value = this.connectedUsersPerAP;\r\n      // Find the AP data in allConnectedUsersData\r\n      const apData = this.allConnectedUsersData.find(\r\n        // (ap) => ap.apMacAddress === this.selectedAccessPoint, // NOTE: commented since this displays data retrieved from the wifidog (captive portal) database\r\n        (ap) => ap.called_station_id === this.selectedAccessPoint,\r\n      );\r\n      // Update the connected users table data\r\n      // this.connectedUsers = apData ? apData.connectedUsers : []; // NOTE: commented since this displays data retrieved from the wifidog (captive portal) database\r\n      this.connectedUsers = apData?.currently_connected_users?.map((user) => ({\r\n        ...user,\r\n        timestamp: Number(user.timestamp) || null,\r\n      })) || [];\r\n    },\r\n    formatTimestamp(timestamp) {\r\n      if (!timestamp) return 'N/A';\r\n      const date = new Date(timestamp * 1000);\r\n\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n\r\n      const hours = String(date.getHours()).padStart(2, '0');\r\n      const minutes = String(date.getMinutes()).padStart(2, '0');\r\n      const seconds = String(date.getSeconds()).padStart(2, '0');\r\n\r\n      return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n    },\r\n    formatMacAddress(mac) {\r\n      if (!mac) return '';\r\n      const cleaned = mac.replace(/[^a-fA-F0-9]/g, '').toUpperCase();\r\n      return cleaned.match(/.{1,2}/g)?.join(':') || mac;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.header-nowrap >>> th {\r\n  white-space: nowrap;\r\n  vertical-align: middle !important;\r\n}\r\n\r\n.header-nowrap >>> td {\r\n  white-space: nowrap;\r\n}\r\n\r\n.header-nowrap >>> th {\r\n  padding: 0 16px !important;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Monitoring.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Monitoring.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Monitoring.vue?vue&type=template&id=ed547cbe&scoped=true\"\nimport script from \"./Monitoring.vue?vue&type=script&lang=js\"\nexport * from \"./Monitoring.vue?vue&type=script&lang=js\"\nimport style0 from \"./Monitoring.vue?vue&type=style&index=0&id=ed547cbe&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ed547cbe\",\n  null\n  \n)\n\nexport default component.exports","import \"../../../src/components/VGrid/_grid.sass\";\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Grid from './grid';\nimport mergeData from '../../util/mergeData';\n/* @vue/component */\n\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    fluid: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    children\n  }) {\n    let classes;\n    const {\n      attrs\n    } = data;\n\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {};\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false;\n        const value = attrs[key]; // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n\n        if (key.startsWith('data-')) {\n          data.attrs[key] = value;\n          return false;\n        }\n\n        return value || typeof value === 'string';\n      });\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {};\n      data.domProps.id = props.id;\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'container',\n      class: Array({\n        'container--fluid': props.fluid\n      }).concat(classes || [])\n    }), children);\n  }\n\n});\n//# sourceMappingURL=VContainer.js.map","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar iteratorClose = require('../internals/iterator-close');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\nvar IS_PURE = require('../internals/is-pure');\n\nvar mapWithoutClosingOnEarlyError = !IS_PURE && iteratorHelperWithoutClosingOnEarlyError('map', TypeError);\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var result = anObject(call(this.next, iterator));\n  var done = this.done = !!result.done;\n  if (!done) return callWithSafeIterationClosing(iterator, this.mapper, [result.value, this.counter++], true);\n});\n\n// `Iterator.prototype.map` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.map\n$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE || mapWithoutClosingOnEarlyError }, {\n  map: function map(mapper) {\n    anObject(this);\n    try {\n      aCallable(mapper);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (mapWithoutClosingOnEarlyError) return call(mapWithoutClosingOnEarlyError, this, mapper);\n\n    return new IteratorProxy(getIteratorDirect(this), {\n      mapper: mapper\n    });\n  }\n});\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Monitoring.vue?vue&type=style&index=0&id=ed547cbe&prod&scoped=true&lang=css\"","// Types\nimport Vue from 'vue';\nexport default function VGrid(name) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n    functional: true,\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div'\n      }\n    },\n\n    render(h, {\n      props,\n      data,\n      children\n    }) {\n      data.staticClass = `${name} ${data.staticClass || ''}`.trim();\n      const {\n        attrs\n      } = data;\n\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {};\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false;\n          const value = attrs[key]; // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n\n          if (key.startsWith('data-')) {\n            data.attrs[key] = value;\n            return false;\n          }\n\n          return value || typeof value === 'string';\n        });\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`;\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {};\n        data.domProps.id = props.id;\n      }\n\n      return h(props.tag, data, children);\n    }\n\n  });\n}\n//# sourceMappingURL=grid.js.map","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar iterate = require('../internals/iterate');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar iteratorClose = require('../internals/iterator-close');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\n\nvar findWithoutClosingOnEarlyError = iteratorHelperWithoutClosingOnEarlyError('find', TypeError);\n\n// `Iterator.prototype.find` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.find\n$({ target: 'Iterator', proto: true, real: true, forced: findWithoutClosingOnEarlyError }, {\n  find: function find(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (findWithoutClosingOnEarlyError) return call(findWithoutClosingOnEarlyError, this, predicate);\n\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    return iterate(record, function (value, stop) {\n      if (predicate(value, counter++)) return stop(value);\n    }, { IS_RECORD: true, INTERRUPTED: true }).result;\n  }\n});\n"],"sourceRoot":""}
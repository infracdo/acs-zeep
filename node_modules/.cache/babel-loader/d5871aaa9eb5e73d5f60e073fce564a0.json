{"remainingRequest":"/home/ubuntu/acs/node_modules/babel-loader/lib/index.js!/home/ubuntu/acs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/ubuntu/acs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/acs/src/views/components/Monitoring.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/acs/src/views/components/Monitoring.vue","mtime":1747193756136},{"path":"/home/ubuntu/acs/babel.config.js","mtime":1747185378775},{"path":"/home/ubuntu/acs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/acs/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/ubuntu/acs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/acs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ApiService","data","cardsOverallSummary","title","value","color","key","cardsAP","headers","text","align","sortable","headersConnectedUsers","connectedUsersPerAP","connectedUsersPerAPMap","connectedUsers","allConnectedUsersData","currentConnectedAPs","accessPointOptions","selectedAccessPoint","loading","created","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","fetchData","stop","methods","_this2","_callee2","_yield$Promise$all","_yield$Promise$all2","countConnectedUsersResponse","countConnectedAPsResponse","totalUserConnectionsTodayResponse","totalBandwidthConsumptionTodayResponse","avgConnectionTimeResponse","avgBandwidthConnectionResponse","countConnectedUsersPerApResponse","connectedUsersPerApResponse","_callee2$","_context2","Promise","all","getCountConnectedUsers","getCountCurrentConnectedAPs","getTotalUserConnectionsToday","getTotalBandwidthConsumptionToday","getAvgConnectionTime","getAverageBandwidthPerConnection","getCountCurrentlyConnectedUsersPerAP","getCurrentConnectedUsersPerAP","getCurrentConnectedAPs","sent","_slicedToArray","connectedAPs","totalUserConnectionsToday","totalBandwidthConsumptionToday","averageConnectionTime","averageBandwidthPerConnection","forEach","item","apMacAddress","userCount","map","ap","length","loadUsersForSelectedAP","t0","console","error","finish","onAPChange","_this3","apData","find","formatCardValue","card","concat"],"sources":["src/views/components/Monitoring.vue"],"sourcesContent":["<template>\n  <v-container\n    fluid\n    class=\"pa-5\"\n  >\n    <!-- Overall Summary -->\n    <v-card class=\"pa-4 mb-6\">\n      <v-card-title class=\"pa-0\">\n        Overall Summary\n      </v-card-title>\n      <v-row>\n        <v-col\n          v-for=\"(card, index) in cardsOverallSummary\"\n          :key=\"index\"\n          cols=\"12\"\n          sm=\"6\"\n          md=\"4\"\n        >\n          <v-card\n            :style=\"{backgroundColor: card.color}\"\n          >\n            <v-card-title\n              class=\"font-weight-bold display-2 text-right\"\n              style=\"text-align: right; display: block; color: white;\"\n            >\n              {{ formatCardValue(card) }}\n              <!-- {{ card.value }} -->\n            </v-card-title>\n            <v-card-text\n              class=\"text-right text-subtitle-2\"\n              style=\"color: white;\"\n            >\n              {{ card.title }}\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-card>\n\n    <!-- List of APs / Data per AP -->\n    <v-card class=\"pa-4 mb-6\">\n      <v-row\n        align=\"center\"\n        class=\"ma-0\"\n      >\n        <v-col class=\"pa-0\">\n          <v-card-title class=\"pa-0 mb-3\">\n            List of Access Points / Data Per Access Point\n          </v-card-title>\n        </v-col>\n        <v-col\n          class=\"pa-0\"\n          cols=\"auto\"\n        >\n          <v-select\n            v-model=\"selectedAccessPoint\"\n            flat\n            solo-inverted\n            hide-details\n            :items=\"accessPointOptions\"\n            item-text=\"text\"\n            item-value=\"value\"\n            style=\"width: 20em;\"\n            label=\"Select Access Point (AP)\"\n            @change=\"onAPChange\"\n          />\n        </v-col>\n      </v-row>\n      <v-col class=\"pa-0\">\n        <v-row>\n          <v-col\n            v-for=\"(card, index) in cardsAP\"\n            :key=\"index\"\n            cols=\"12\"\n            sm=\"6\"\n            md=\"4\"\n          >\n            <v-card\n              :style=\"{backgroundColor: card.color}\"\n            >\n              <v-card-title\n                class=\"font-weight-bold display-2 text-right\"\n                style=\"text-align: right; display: block; color: white;\"\n              >\n                {{ card.value }}\n              </v-card-title>\n              <v-card-text\n                class=\"text-right text-subtitle-2\"\n                style=\"color: white;\"\n              >\n                {{ card.title }}\n              </v-card-text>\n            </v-card>\n          </v-col>\n        </v-row>\n\n        <!-- Table for list of currently connected users per access point -->\n        <v-card class=\"mt-3\">\n          <v-card-title>\n            List of Currently Connected Users\n            <!-- <v-spacer />\n            <v-text-field\n              v-model=\"search\"\n              append-icon=\"mdi-magnify\"\n              label=\"Search\"\n              single-line\n              hide-details\n            /> -->\n          </v-card-title>\n          <div style=\"overflow-x: auto;\">\n            <v-data-table\n              dense\n              :headers=\"headers\"\n              :items=\"connectedUsers\"\n              item-key=\"macAddress\"\n              :loading=\"loading\"\n              loading-text=\"Loading... Please wait\"\n              style=\"min-width: 1000px\"\n              class=\"header-nowrap\"\n            >\n              <template v-slot:item.bandwidthMB=\"{ item }\">\n                {{ item.bandwidthMB }} MB\n              </template>\n            </v-data-table>\n          </div>\n        </v-card>\n      </v-col>\n    </v-card>\n\n    <!-- List of Connected Users -->\n    <!-- <v-card>\n      <v-card-title>\n        List of Connected Users\n      </v-card-title>\n      <v-data-table\n        dense\n        :headers=\"headersConnectedUsers\"\n        :items=\"listOfConnectedUsers\"\n        item-key=\"macAddress\"\n        :loading=\"loading\"\n        loading-text=\"Loading... Please wait\"\n      />\n    </v-card> -->\n  </v-container>\n</template>\n\n<script>\nimport ApiService from '../../api.service';\n\nexport default {\n  data() {\n    return {\n      cardsOverallSummary: [\n        {\n          title: 'Current Number of Connected Users',\n          value: 0,\n          color: '#66BB6A',\n          key: 'connectedUsers',\n        },\n        {\n          title: 'Current Number of Connected APs',\n          value: 0,\n          color: '#4DB6AC',\n          key: 'connectedAPs',\n        },\n        {\n          title: 'Total User Connections for Today',\n          value: 0,\n          color: '#FFB74D',\n          key: 'totalUserConnectionsToday',\n        },\n        {\n          title: 'Total Bandwidth Consumption for Today',\n          value: 0,\n          color: '#FDD835',\n          key: 'totalBandwidthConsumptionToday',\n        },\n        {\n          title: 'Average Connection Time',\n          value: 0,\n          color: '#1E88E5',\n          key: 'averageConnectionTime',\n        },\n        {\n          title: 'Average Bandwidth Per Connection',\n          value: 0,\n          color: '#E57373',\n          key: 'averageBandwidthPerConnection',\n        },\n      ],\n      cardsAP: [\n        {\n          title: 'Currently Connected Users',\n          value: 0,\n          color: '#66BB6A',\n          key: 'connectedUsersPerAP',\n        },\n        // {\n        //   title: 'Daily Average Connected Users',\n        //   value: 0,\n        //   color: '#4DB6AC',\n        // },\n        // {\n        //   title: 'Daily Average User Connection Time',\n        //   value: 0,\n        //   color: '#FFB74D',\n        // },\n        // {\n        //   title: 'Daily Average Bandwidth Consumption',\n        //   value: 0,\n        //   color: '#FDD835',\n        // },\n        // {\n        //   title: 'Daily Average Bandwidth Consumption Per User',\n        //   value: 0,\n        //   color: '#1E88E5',\n        // },\n      ],\n      headers: [\n        {\n          text: 'Account Number',\n          align: 'start',\n          sortable: true,\n          value: 'accountNumber',\n        },\n        {\n          text: 'Package',\n          align: 'start',\n          sortable: true,\n          value: 'package',\n        },\n        {\n          text: 'MAC Address',\n          align: 'start',\n          sortable: true,\n          value: 'macAddress',\n        },\n        {\n          text: 'Device',\n          align: 'start',\n          sortable: false,\n          value: 'device',\n        },\n        {\n          text: 'IP Address',\n          align: 'start',\n          sortable: true,\n          value: 'ipAddress',\n        },\n        {\n          text: 'SSID',\n          align: 'start',\n          sortable: true,\n          value: 'ssid',\n        },\n        {\n          text: 'Bandwidth Consumption',\n          align: 'start',\n          sortable: true,\n          value: 'bandwidthMB',\n        },\n        {\n          text: 'Time Connected',\n          align: 'start',\n          sortable: true,\n          value: 'lastActive',\n        },\n      ],\n      headersConnectedUsers: [\n        {\n          text: 'Account Number',\n          align: 'start',\n          sortable: true,\n          value: 'accountNumber',\n        },\n        {\n          text: 'Package',\n          align: 'start',\n          sortable: true,\n          value: 'package',\n        },\n        {\n          text: 'MAC Address',\n          align: 'start',\n          sortable: true,\n          value: 'macAddress',\n        },\n        {\n          text: 'Device',\n          align: 'start',\n          sortable: true,\n          value: 'device',\n        },\n        {\n          text: 'IP Address',\n          align: 'start',\n          sortable: true,\n          value: 'ipAddress',\n        },\n        {\n          text: 'Connection Time',\n          align: 'start',\n          sortable: true,\n          value: 'connectionTime',\n        },\n        {\n          text: 'Bandwidth Consumption',\n          align: 'start',\n          sortable: true,\n          value: 'bandwidthConsumption',\n        },\n      ],\n      connectedUsersPerAP: 0,\n      connectedUsersPerAPMap: {},\n      connectedUsers: [],\n      allConnectedUsersData: [],\n      currentConnectedAPs: [],\n      accessPointOptions: [],\n      selectedAccessPoint: null,\n      loading: false,\n    };\n  },\n  async created() {\n    await this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        this.loading = true;\n\n        // Fetch all data in parallel\n        const [\n          countConnectedUsersResponse,\n          countConnectedAPsResponse,\n          totalUserConnectionsTodayResponse,\n          totalBandwidthConsumptionTodayResponse,\n          avgConnectionTimeResponse,\n          avgBandwidthConnectionResponse,\n          countConnectedUsersPerApResponse,\n          connectedUsersPerApResponse,\n          currentConnectedAPs,\n        ] = await Promise.all([\n          ApiService.getCountConnectedUsers(),\n          ApiService.getCountCurrentConnectedAPs(),\n          ApiService.getTotalUserConnectionsToday(),\n          ApiService.getTotalBandwidthConsumptionToday(),\n          ApiService.getAvgConnectionTime(),\n          ApiService.getAverageBandwidthPerConnection(),\n          ApiService.getCountCurrentlyConnectedUsersPerAP(),\n          ApiService.getCurrentConnectedUsersPerAP(),\n          ApiService.getCurrentConnectedAPs(),\n        ]);\n\n        // Update overall summary cards\n        this.cardsOverallSummary[0].value = countConnectedUsersResponse.data.connectedUsers;\n        this.cardsOverallSummary[1].value = countConnectedAPsResponse.data.connectedAPs;\n        this.cardsOverallSummary[2].value = totalUserConnectionsTodayResponse.data.totalUserConnectionsToday;\n        this.cardsOverallSummary[3].value = totalBandwidthConsumptionTodayResponse.data.totalBandwidthConsumptionToday;\n        this.cardsOverallSummary[4].value = avgConnectionTimeResponse.data.averageConnectionTime;\n        this.cardsOverallSummary[5].value = avgBandwidthConnectionResponse.data.averageBandwidthPerConnection;\n\n        // Convert array to map\n        this.connectedUsersPerAPMap = {};\n        countConnectedUsersPerApResponse.data.forEach((item) => {\n          this.connectedUsersPerAPMap[item.apMacAddress] = item.userCount;\n        });\n\n        // Store all connected users data\n        this.allConnectedUsersData = connectedUsersPerApResponse.data;\n\n        // Setup options for the select field\n        this.currentConnectedAPs = currentConnectedAPs.data.data;\n        this.accessPointOptions = this.currentConnectedAPs.map((ap) => ({\n          text: ap,\n          value: ap,\n        }));\n\n        // Optionally pre-select the first access point\n        if (this.accessPointOptions.length > 0) {\n          this.selectedAccessPoint = this.accessPointOptions[0].value;\n          this.connectedUsersPerAP = this.connectedUsersPerAPMap[this.selectedAccessPoint] || 0;\n          this.cardsAP[0].value = this.connectedUsersPerAP;\n          this.loadUsersForSelectedAP();\n        }\n      } catch (error) {\n        console.error('Error fetching data: ', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    onAPChange(selectedAccessPoint) {\n      this.selectedAccessPoint = selectedAccessPoint;\n      this.loadUsersForSelectedAP();\n    },\n    loadUsersForSelectedAP() {\n      if (!this.selectedAccessPoint) return;\n      // Update the count of connected users\n      this.connectedUsersPerAP = this.connectedUsersPerAPMap[this.selectedAccessPoint] || 0;\n      // Update the card value\n      this.cardsAP[0].value = this.connectedUsersPerAP;\n      // Find the AP data in allConnectedUsersData\n      const apData = this.allConnectedUsersData.find(\n        (ap) => ap.apMacAddress === this.selectedAccessPoint,\n      );\n      // Update the connected users table data\n      this.connectedUsers = apData ? apData.connectedUsers : [];\n    },\n    formatCardValue(card) {\n      if (card.title === 'Total Bandwidth Consumption for Today' || card.title === 'Average Bandwidth Per Connection') {\n        return `${card.value} MB`;\n      }\n      if (card.title === 'Average Connection Time') {\n        return `${card.value} MINS`;\n      }\n      return card.value;\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Prevent header text wrapping and center vertically */\n.header-nowrap >>> th {\n  white-space: nowrap;\n  vertical-align: middle !important;\n}\n\n/* Ensure table cells don't wrap either */\n.header-nowrap >>> td {\n  white-space: nowrap;\n}\n\n/* Optional: Add some padding to headers for better appearance */\n.header-nowrap >>> th {\n  padding: 0 16px !important;\n}\n</style>"],"mappings":";;;;;;;;;;;;;AAmJA,OAAAA,UAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,mBAAA,GACA;QACAC,KAAA;QACAC,KAAA;QACAC,KAAA;QACAC,GAAA;MACA,GACA;QACAH,KAAA;QACAC,KAAA;QACAC,KAAA;QACAC,GAAA;MACA,GACA;QACAH,KAAA;QACAC,KAAA;QACAC,KAAA;QACAC,GAAA;MACA,GACA;QACAH,KAAA;QACAC,KAAA;QACAC,KAAA;QACAC,GAAA;MACA,GACA;QACAH,KAAA;QACAC,KAAA;QACAC,KAAA;QACAC,GAAA;MACA,GACA;QACAH,KAAA;QACAC,KAAA;QACAC,KAAA;QACAC,GAAA;MACA,EACA;MACAC,OAAA,GACA;QACAJ,KAAA;QACAC,KAAA;QACAC,KAAA;QACAC,GAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAAA,CACA;MACAE,OAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,QAAA;QACAP,KAAA;MACA,GACA;QACAK,IAAA;QACAC,KAAA;QACAC,QAAA;QACAP,KAAA;MACA,GACA;QACAK,IAAA;QACAC,KAAA;QACAC,QAAA;QACAP,KAAA;MACA,GACA;QACAK,IAAA;QACAC,KAAA;QACAC,QAAA;QACAP,KAAA;MACA,GACA;QACAK,IAAA;QACAC,KAAA;QACAC,QAAA;QACAP,KAAA;MACA,GACA;QACAK,IAAA;QACAC,KAAA;QACAC,QAAA;QACAP,KAAA;MACA,GACA;QACAK,IAAA;QACAC,KAAA;QACAC,QAAA;QACAP,KAAA;MACA,GACA;QACAK,IAAA;QACAC,KAAA;QACAC,QAAA;QACAP,KAAA;MACA,EACA;MACAQ,qBAAA,GACA;QACAH,IAAA;QACAC,KAAA;QACAC,QAAA;QACAP,KAAA;MACA,GACA;QACAK,IAAA;QACAC,KAAA;QACAC,QAAA;QACAP,KAAA;MACA,GACA;QACAK,IAAA;QACAC,KAAA;QACAC,QAAA;QACAP,KAAA;MACA,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","ignoreList":[]}]}
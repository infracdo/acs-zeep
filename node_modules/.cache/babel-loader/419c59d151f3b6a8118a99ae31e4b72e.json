{"remainingRequest":"/home/ubuntu/acs/node_modules/babel-loader/lib/index.js!/home/ubuntu/acs/node_modules/eslint-loader/index.js??ref--14-0!/home/ubuntu/acs/src/store/plugins/syncStorage.js","dependencies":[{"path":"/home/ubuntu/acs/src/store/plugins/syncStorage.js","mtime":1747185179292},{"path":"/home/ubuntu/acs/babel.config.js","mtime":1747185378775},{"path":"/home/ubuntu/acs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/acs/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/ubuntu/acs/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["config","user","settings","SyncStorage","option","_this","_classCallCheck","_defineProperty","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","store","wrap","_callee$","_context","prev","next","checkStorage","Error","checkVersion","version","console","log","concat","warn","initUserState","dispatch","roles","getters","initSettingsState","subscribe","mutation","state","userMutations","includes","type","setToStorage","prefix","JSON","stringify","getSeconds","ttl","settingsMutations","stop","_x","apply","arguments","Math","floor","Date","now","module","key","Object","keys","storage","window","getModuleOptions","_createClass","value","setItem","removeItem","err","error","getFromStorage","clear","userTTL","parseInt","commit","logout","userState","parse","settingsState","getItem","syncStorageOption","syncStorage"],"sources":["/home/ubuntu/acs/src/store/plugins/syncStorage.js"],"sourcesContent":["import config from '@/config';\nimport user from '@/store/modules/user';\nimport settings from '@/store/modules/settings';\n\n/**\n * Vuex plugin for save and sync 'settings' and 'user' from vuex modules.\n */\nclass SyncStorage {\n  constructor(option) {\n    /** init options */\n    this.storage = (window && window[option.storage]) || (window && window[config.storage]);\n    this.prefix = option.prefix || config.prefix;\n    this.ttl = option.ttl || config.ttl;\n    this.user = 'user';\n    this.settings = 'settings';\n\n    this.userMutations = this.getModuleOptions(user, 'mutations');\n    // this.userActions = this.getModuleOptions(user, 'actions');\n    this.settingsMutations = this.getModuleOptions(settings, 'mutations');\n    // this.settingsActions = this.getModuleOptions(settings, 'actions');\n\n    console.log('[vuex.SyncStorage] option:',\n      option.storage || config.storage, this.prefix, this.ttl, option);\n  }\n\n  /**\n   * Vuex subscribe plugin function.\n   * @param {Object} store Vuex instance\n   */\n  subscribe = async (store) => {\n    if (!this.checkStorage()) {\n      throw new Error('[vuex.SyncStorage] Invalid \"Storage\" instance given');\n    }\n\n    if (this.checkVersion(config.version)) {\n      console.log(`[vuex.SyncStorage] Current version of the application \"${config.version}\"`);\n    } else {\n      console.warn(`[vuex.SyncStorage] Application version updated to \"${config.version}\"`);\n    }\n\n    // init and apply user state from storage\n    if (this.initUserState(store)) {\n      await store.dispatch('GenerateRoutes', { roles: store.getters.roles });\n      console.log('[vuex.SyncStorage] initUserState');\n    } else {\n      console.warn('[vuex.SyncStorage] No user state in \"Storage\"');\n    }\n\n    // init and apply settings state from storage\n    if (this.initSettingsState(store)) {\n      console.log('[vuex.SyncStorage] initSettingsState');\n    } else {\n      console.warn('[vuex.SyncStorage] No user settings in \"Storage\"');\n    }\n\n    store.subscribe((mutation, state) => {\n      // console.log('storage subscribe', mutation.type);\n      if (this.userMutations.includes(mutation.type)) {\n        // console.log('storage subscribe user_mutations', mutation, state);\n        this.setToStorage(`${this.prefix}${this.user}`, JSON.stringify(state.user));\n        if (mutation.type === 'SET_TOKEN') {\n          this.setToStorage(`${this.prefix}ttl`, this.getSeconds(this.ttl));\n        }\n      }\n      if (this.settingsMutations.includes(mutation.type)) {\n        // console.log('storage subscribe settings_mutations', mutation, state);\n        this.setToStorage(`${this.prefix}${this.settings}`, JSON.stringify(state.settings));\n      }\n    });\n\n    /* store.subscribeAction({\n      after: (action, state) => {\n        // console.log('storage subscribeAction after ', action.type);\n        if (this.userActions.includes(action.type)) {\n          console.log('storage subscribeAction user_actions after', action, state);\n        }\n        if (this.settingsActions.includes(action.type)) {\n          console.log('storage subscribeAction settings_actions after', action, state);\n        }\n      },\n      before: (action, state) => {\n        // console.log('storage subscribeAction before ', action.type);\n        if (this.userActions.includes(action.type)) {\n          console.warn('storage subscribeAction user_actions before', action, state);\n        }\n        if (this.settingsActions.includes(action.type)) {\n          console.warn('storage subscribeAction settings_actions before', action, state);\n        }\n      }\n    }); */\n  };\n\n  /**\n   * Get current seconds + ttl.\n   * @param {Number} ttl Session lifetime\n   */\n  getSeconds = (ttl) => Math.floor(Date.now() / 1000) + (ttl || 0);\n\n  /**\n   * Get array of module mutation types.\n   */\n  getModuleOptions = (module, key) => {\n    if (!module || !module[key]) return [];\n    return Object.keys(module[key]);\n  };\n\n  /**\n   * Check LocalStorage to read/write.\n   */\n  checkStorage() {\n    try {\n      this.storage.setItem(`${this.prefix}@@`, 1);\n      this.storage.removeItem(`${this.prefix}@@`);\n    } catch (err) {\n      console.error(`[vuex.SyncStorage] Check storage failed: ${err}`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Check application version.\n   * If the version of the application has changed, then the storage is cleared of the session\n   * and settings. Required to apply the settings of the new version of the application\n   * @param {String} version version of the application\n   */\n  checkVersion(version) {\n    try {\n      if (this.getFromStorage(`${this.prefix}version`) === version) {\n        return true;\n      }\n\n      this.storage.clear();\n      this.setToStorage(`${this.prefix}version`, version);\n    } catch (err) {\n      console.error(`[vuex.SyncStorage] Check version failed: ${err}`);\n    }\n    return false;\n  }\n\n  /**\n   * Get user info from storage.\n   */\n  initUserState(store) {\n    const userTTL = parseInt(this.getFromStorage(`${this.prefix}ttl`) || 0, 10);\n    if (userTTL < this.getSeconds()) {\n      console.warn('[vuex.SyncStorage] Session expired');\n      store.commit('SET_USER_INFO', { logout: true });\n      return false;\n    }\n\n    const userState = this.getFromStorage(`${this.prefix}${this.user}`);\n    if (userState) {\n      store.commit('SET_USER_INFO', JSON.parse(userState));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get settings from storage.\n   */\n  initSettingsState(store) {\n    const settingsState = this.getFromStorage(`${this.prefix}${this.settings}`);\n    if (settingsState) {\n      store.commit('SET_SETTINGS', JSON.parse(settingsState));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get data to storage.\n   * @param {String} key\n   * @param {String} value\n   */\n  setToStorage(key, value) {\n    try {\n      this.storage.setItem(key, value);\n    } catch (err) {\n      console.error(`[vuex.SyncStorage] setItem storage failed: ${err}`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Get data from storage.\n   * @param {String} key\n   */\n  getFromStorage(key) {\n    try {\n      return this.storage.getItem(key);\n    } catch (err) {\n      console.error(`[vuex.SyncStorage] getItem storage failed: ${err}`);\n    }\n    return '';\n  }\n}\n\nexport default function (syncStorageOption) {\n  const syncStorage = new SyncStorage(syncStorageOption);\n  return syncStorage.subscribe;\n}\n"],"mappings":"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","ignoreList":[]}]}
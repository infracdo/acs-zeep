{"remainingRequest":"/home/ubuntu/acs/node_modules/thread-loader/dist/cjs.js!/home/ubuntu/acs/node_modules/babel-loader/lib/index.js!/home/ubuntu/acs/node_modules/eslint-loader/index.js??ref--14-0!/home/ubuntu/acs/src/router/permission.js","dependencies":[{"path":"/home/ubuntu/acs/src/router/permission.js","mtime":1747185179044},{"path":"/home/ubuntu/acs/babel.config.js","mtime":1747185378775},{"path":"/home/ubuntu/acs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/acs/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/acs/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/ubuntu/acs/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["NProgress","router","asyncRoutes","store","authRouter","configure","showSpinner","whiteList","concat","Array","from","route","path","alias","filter","console","log","hasPermission","roles","permissionRoles","includes","some","role","beforeEach","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","to","next","profile","loginUrl","wrap","_callee$","_context","prev","start","app","$keycloak","authenticated","loadUserProfile","sent","commit","user","username","name","firstName","lastName","createLoginUrl","redirectUri","window","location","replace","done","stop","_x","_x2","_x3","apply","arguments","afterEach","_callee2","_callee2$","_context2"],"sources":["/home/ubuntu/acs/src/router/permission.js"],"sourcesContent":["import NProgress from 'nprogress'; // progress bar\r\nimport router, { asyncRoutes } from './index';\r\nimport store from '../store';\r\nimport authRouter from './modules/auth';\r\nimport 'nprogress/nprogress.css'; // progress bar style\r\n\r\nNProgress.configure({ showSpinner: false }); // NProgress Configuration\r\n\r\n/**\r\n * Generate white list\r\n */\r\nconst whiteList = (['/landing', '/land']\r\n  .concat(Array.from(authRouter, (route) => route.path))\r\n  .concat(Array.from(authRouter, (route) => route.alias)))\r\n  .filter((route) => route); // remove undefined element\r\nconsole.log('[router.whiteList]', whiteList);\r\n\r\n/**\r\n * Check user has permission for this routes.\r\n * 'admin' permission passed directly.\r\n * @param {Array} roles\r\n * @param {Array} permissionRoles\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nfunction hasPermission(roles, permissionRoles) {\r\n  if (roles.includes('admin')) return true;\r\n  if (!permissionRoles) return true;\r\n  return roles.some((role) => permissionRoles.includes(role));\r\n}\r\n\r\nrouter.beforeEach(async (to, from, next) => {\r\n  NProgress.start();\r\n  if (router.app.$keycloak.authenticated) {\r\n    const profile = await router.app.$keycloak.loadUserProfile();\r\n    console.log(profile);\r\n    store.commit('SET_USER_INFO', {\r\n      user: profile.username,\r\n      name: `${profile.firstName} ${profile.lastName}`,\r\n    });\r\n    store.commit('SET_ROUTES', asyncRoutes);\r\n    next();\r\n  } else {\r\n    const loginUrl = router.app.$keycloak.createLoginUrl({\r\n      redirectUri: to.path,\r\n    });\r\n    window.location.replace(loginUrl);\r\n  }\r\n  NProgress.done();\r\n});\r\n\r\n// router.beforeEach(async (to, from, next) => {\r\n//   NProgress.start();\r\n//   let logMsg = '[router.beforeEach]';\r\n//   try {\r\n//     // determine if there has token\r\n//     if (store.getters.token) {\r\n//       logMsg += '\\t[token]';\r\n//       if (whiteList.includes(to.path)) {\r\n//         logMsg += '\\t[whiteList]';\r\n//         next({ path: '/' });\r\n//       } else {\r\n//         logMsg += '\\t[!whiteList]';\r\n//         if (!store.getters.roles || store.getters.roles.length === 0) {\r\n//           logMsg += `\\t[roles=${store.getters.roles}]`;\r\n//           // Determine whether the current user has pulled the user_info information\r\n//           await store.dispatch('GetUserInfo');\r\n//           if (!store.getters.user || !store.getters.user.roles) {\r\n//             logMsg += '\\t[LogOut]\\t[next /]';\r\n//             await store.dispatch('LogOut');\r\n//             next({ path: '/' });\r\n//           }\r\n\r\n//           // note: roles must be a object array! such as:\r\n//           // [{id: '1', name: 'editor'}, {id: '2', name: 'developer'}]\r\n//           await store.dispatch('GenerateRoutes', store.getters.user);\r\n//           if (!store.getters.permissionRoutes) {\r\n//             logMsg += '\\t[Redirect]\\t[next /]';\r\n//             next({ path: '/' });\r\n//           }\r\n\r\n//           // Hack method to ensure that addRoutes is complete,\r\n//           // set the replace: true so the navigation will not leave a history record\r\n//           next({ ...to, replace: true });\r\n//         } else {\r\n//           logMsg += `\\t[roles=${store.getters.roles}]`;\r\n//           // No need to dynamically change permissions can be directly next()\r\n//           // delete the following permission judgment ↓\r\n//           if (hasPermission(store.getters.roles, to.meta.roles)) {\r\n//             logMsg += `\\t[Permission=${to.meta.roles}]\\t[next]`;\r\n//             next();\r\n//           } else {\r\n//             logMsg += `\\t[!Permission=${to.meta.roles}]\\t[next /401]`;\r\n//             next({ path: '/401', replace: true, query: { noGoBack: true } });\r\n//           }\r\n//         }\r\n//       }\r\n//     } else {\r\n//       logMsg += '\\t[!token]';\r\n//       if (whiteList.includes(to.path)) {\r\n//         logMsg += '\\t[whiteList]';\r\n//         next();\r\n//       } else {\r\n//         logMsg += '\\t[!whiteList]';\r\n//         next(`/signin?redirect=${to.path}`);\r\n//       }\r\n//     }\r\n//   } catch (err) {\r\n//     console.warn(`[router.beforeEach]\\t${to.path}: ${err}`);\r\n//   }\r\n//   console.log(logMsg, to.path);\r\n//   NProgress.done();\r\n// });\r\n\r\nrouter.afterEach(async () => {\r\n  NProgress.done();\r\n});\r\n"],"mappings":"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","ignoreList":[]}]}
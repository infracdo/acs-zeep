{"remainingRequest":"/home/ubuntu/acs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ubuntu/acs/src/views/components/Monitoring.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/ubuntu/acs/src/views/components/Monitoring.vue","mtime":1747193756136},{"path":"/home/ubuntu/acs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/acs/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/ubuntu/acs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ubuntu/acs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBBcGlTZXJ2aWNlIGZyb20gJy4uLy4uL2FwaS5zZXJ2aWNlJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2FyZHNPdmVyYWxsU3VtbWFyeTogWwogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAnQ3VycmVudCBOdW1iZXIgb2YgQ29ubmVjdGVkIFVzZXJzJywKICAgICAgICAgIHZhbHVlOiAwLAogICAgICAgICAgY29sb3I6ICcjNjZCQjZBJywKICAgICAgICAgIGtleTogJ2Nvbm5lY3RlZFVzZXJzJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAnQ3VycmVudCBOdW1iZXIgb2YgQ29ubmVjdGVkIEFQcycsCiAgICAgICAgICB2YWx1ZTogMCwKICAgICAgICAgIGNvbG9yOiAnIzREQjZBQycsCiAgICAgICAgICBrZXk6ICdjb25uZWN0ZWRBUHMnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICdUb3RhbCBVc2VyIENvbm5lY3Rpb25zIGZvciBUb2RheScsCiAgICAgICAgICB2YWx1ZTogMCwKICAgICAgICAgIGNvbG9yOiAnI0ZGQjc0RCcsCiAgICAgICAgICBrZXk6ICd0b3RhbFVzZXJDb25uZWN0aW9uc1RvZGF5JywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAnVG90YWwgQmFuZHdpZHRoIENvbnN1bXB0aW9uIGZvciBUb2RheScsCiAgICAgICAgICB2YWx1ZTogMCwKICAgICAgICAgIGNvbG9yOiAnI0ZERDgzNScsCiAgICAgICAgICBrZXk6ICd0b3RhbEJhbmR3aWR0aENvbnN1bXB0aW9uVG9kYXknLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICdBdmVyYWdlIENvbm5lY3Rpb24gVGltZScsCiAgICAgICAgICB2YWx1ZTogMCwKICAgICAgICAgIGNvbG9yOiAnIzFFODhFNScsCiAgICAgICAgICBrZXk6ICdhdmVyYWdlQ29ubmVjdGlvblRpbWUnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICdBdmVyYWdlIEJhbmR3aWR0aCBQZXIgQ29ubmVjdGlvbicsCiAgICAgICAgICB2YWx1ZTogMCwKICAgICAgICAgIGNvbG9yOiAnI0U1NzM3MycsCiAgICAgICAgICBrZXk6ICdhdmVyYWdlQmFuZHdpZHRoUGVyQ29ubmVjdGlvbicsCiAgICAgICAgfSwKICAgICAgXSwKICAgICAgY2FyZHNBUDogWwogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAnQ3VycmVudGx5IENvbm5lY3RlZCBVc2VycycsCiAgICAgICAgICB2YWx1ZTogMCwKICAgICAgICAgIGNvbG9yOiAnIzY2QkI2QScsCiAgICAgICAgICBrZXk6ICdjb25uZWN0ZWRVc2Vyc1BlckFQJywKICAgICAgICB9LAogICAgICAgIC8vIHsKICAgICAgICAvLyAgIHRpdGxlOiAnRGFpbHkgQXZlcmFnZSBDb25uZWN0ZWQgVXNlcnMnLAogICAgICAgIC8vICAgdmFsdWU6IDAsCiAgICAgICAgLy8gICBjb2xvcjogJyM0REI2QUMnLAogICAgICAgIC8vIH0sCiAgICAgICAgLy8gewogICAgICAgIC8vICAgdGl0bGU6ICdEYWlseSBBdmVyYWdlIFVzZXIgQ29ubmVjdGlvbiBUaW1lJywKICAgICAgICAvLyAgIHZhbHVlOiAwLAogICAgICAgIC8vICAgY29sb3I6ICcjRkZCNzREJywKICAgICAgICAvLyB9LAogICAgICAgIC8vIHsKICAgICAgICAvLyAgIHRpdGxlOiAnRGFpbHkgQXZlcmFnZSBCYW5kd2lkdGggQ29uc3VtcHRpb24nLAogICAgICAgIC8vICAgdmFsdWU6IDAsCiAgICAgICAgLy8gICBjb2xvcjogJyNGREQ4MzUnLAogICAgICAgIC8vIH0sCiAgICAgICAgLy8gewogICAgICAgIC8vICAgdGl0bGU6ICdEYWlseSBBdmVyYWdlIEJhbmR3aWR0aCBDb25zdW1wdGlvbiBQZXIgVXNlcicsCiAgICAgICAgLy8gICB2YWx1ZTogMCwKICAgICAgICAvLyAgIGNvbG9yOiAnIzFFODhFNScsCiAgICAgICAgLy8gfSwKICAgICAgXSwKICAgICAgaGVhZGVyczogWwogICAgICAgIHsKICAgICAgICAgIHRleHQ6ICdBY2NvdW50IE51bWJlcicsCiAgICAgICAgICBhbGlnbjogJ3N0YXJ0JywKICAgICAgICAgIHNvcnRhYmxlOiB0cnVlLAogICAgICAgICAgdmFsdWU6ICdhY2NvdW50TnVtYmVyJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRleHQ6ICdQYWNrYWdlJywKICAgICAgICAgIGFsaWduOiAnc3RhcnQnLAogICAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgICB2YWx1ZTogJ3BhY2thZ2UnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGV4dDogJ01BQyBBZGRyZXNzJywKICAgICAgICAgIGFsaWduOiAnc3RhcnQnLAogICAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgICB2YWx1ZTogJ21hY0FkZHJlc3MnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGV4dDogJ0RldmljZScsCiAgICAgICAgICBhbGlnbjogJ3N0YXJ0JywKICAgICAgICAgIHNvcnRhYmxlOiBmYWxzZSwKICAgICAgICAgIHZhbHVlOiAnZGV2aWNlJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRleHQ6ICdJUCBBZGRyZXNzJywKICAgICAgICAgIGFsaWduOiAnc3RhcnQnLAogICAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgICB2YWx1ZTogJ2lwQWRkcmVzcycsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0ZXh0OiAnU1NJRCcsCiAgICAgICAgICBhbGlnbjogJ3N0YXJ0JywKICAgICAgICAgIHNvcnRhYmxlOiB0cnVlLAogICAgICAgICAgdmFsdWU6ICdzc2lkJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRleHQ6ICdCYW5kd2lkdGggQ29uc3VtcHRpb24nLAogICAgICAgICAgYWxpZ246ICdzdGFydCcsCiAgICAgICAgICBzb3J0YWJsZTogdHJ1ZSwKICAgICAgICAgIHZhbHVlOiAnYmFuZHdpZHRoTUInLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGV4dDogJ1RpbWUgQ29ubmVjdGVkJywKICAgICAgICAgIGFsaWduOiAnc3RhcnQnLAogICAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgICB2YWx1ZTogJ2xhc3RBY3RpdmUnLAogICAgICAgIH0sCiAgICAgIF0sCiAgICAgIGhlYWRlcnNDb25uZWN0ZWRVc2VyczogWwogICAgICAgIHsKICAgICAgICAgIHRleHQ6ICdBY2NvdW50IE51bWJlcicsCiAgICAgICAgICBhbGlnbjogJ3N0YXJ0JywKICAgICAgICAgIHNvcnRhYmxlOiB0cnVlLAogICAgICAgICAgdmFsdWU6ICdhY2NvdW50TnVtYmVyJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRleHQ6ICdQYWNrYWdlJywKICAgICAgICAgIGFsaWduOiAnc3RhcnQnLAogICAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgICB2YWx1ZTogJ3BhY2thZ2UnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGV4dDogJ01BQyBBZGRyZXNzJywKICAgICAgICAgIGFsaWduOiAnc3RhcnQnLAogICAgICAgICAgc29ydGFibGU6IHRydWUsCiAgICAgICAgICB2YWx1ZTogJ21hY0FkZHJlc3MnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGV4dDogJ0RldmljZScsCiAgICAgICAgICBhbGlnbjogJ3N0YXJ0JywKICAgICAgICAgIHNvcnRhYmxlOiB0cnVlLAogICAgICAgICAgdmFsdWU6ICdkZXZpY2UnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGV4dDogJ0lQIEFkZHJlc3MnLAogICAgICAgICAgYWxpZ246ICdzdGFydCcsCiAgICAgICAgICBzb3J0YWJsZTogdHJ1ZSwKICAgICAgICAgIHZhbHVlOiAnaXBBZGRyZXNzJywKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRleHQ6ICdDb25uZWN0aW9uIFRpbWUnLAogICAgICAgICAgYWxpZ246ICdzdGFydCcsCiAgICAgICAgICBzb3J0YWJsZTogdHJ1ZSwKICAgICAgICAgIHZhbHVlOiAnY29ubmVjdGlvblRpbWUnLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGV4dDogJ0JhbmR3aWR0aCBDb25zdW1wdGlvbicsCiAgICAgICAgICBhbGlnbjogJ3N0YXJ0JywKICAgICAgICAgIHNvcnRhYmxlOiB0cnVlLAogICAgICAgICAgdmFsdWU6ICdiYW5kd2lkdGhDb25zdW1wdGlvbicsCiAgICAgICAgfSwKICAgICAgXSwKICAgICAgY29ubmVjdGVkVXNlcnNQZXJBUDogMCwKICAgICAgY29ubmVjdGVkVXNlcnNQZXJBUE1hcDoge30sCiAgICAgIGNvbm5lY3RlZFVzZXJzOiBbXSwKICAgICAgYWxsQ29ubmVjdGVkVXNlcnNEYXRhOiBbXSwKICAgICAgY3VycmVudENvbm5lY3RlZEFQczogW10sCiAgICAgIGFjY2Vzc1BvaW50T3B0aW9uczogW10sCiAgICAgIHNlbGVjdGVkQWNjZXNzUG9pbnQ6IG51bGwsCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgfTsKICB9LAogIGFzeW5jIGNyZWF0ZWQoKSB7CiAgICBhd2FpdCB0aGlzLmZldGNoRGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgZmV0Y2hEYXRhKCkgewogICAgICB0cnkgewogICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CgogICAgICAgIC8vIEZldGNoIGFsbCBkYXRhIGluIHBhcmFsbGVsCiAgICAgICAgY29uc3QgWwogICAgICAgICAgY291bnRDb25uZWN0ZWRVc2Vyc1Jlc3BvbnNlLAogICAgICAgICAgY291bnRDb25uZWN0ZWRBUHNSZXNwb25zZSwKICAgICAgICAgIHRvdGFsVXNlckNvbm5lY3Rpb25zVG9kYXlSZXNwb25zZSwKICAgICAgICAgIHRvdGFsQmFuZHdpZHRoQ29uc3VtcHRpb25Ub2RheVJlc3BvbnNlLAogICAgICAgICAgYXZnQ29ubmVjdGlvblRpbWVSZXNwb25zZSwKICAgICAgICAgIGF2Z0JhbmR3aWR0aENvbm5lY3Rpb25SZXNwb25zZSwKICAgICAgICAgIGNvdW50Q29ubmVjdGVkVXNlcnNQZXJBcFJlc3BvbnNlLAogICAgICAgICAgY29ubmVjdGVkVXNlcnNQZXJBcFJlc3BvbnNlLAogICAgICAgICAgY3VycmVudENvbm5lY3RlZEFQcywKICAgICAgICBdID0gYXdhaXQgUHJvbWlzZS5hbGwoWwogICAgICAgICAgQXBpU2VydmljZS5nZXRDb3VudENvbm5lY3RlZFVzZXJzKCksCiAgICAgICAgICBBcGlTZXJ2aWNlLmdldENvdW50Q3VycmVudENvbm5lY3RlZEFQcygpLAogICAgICAgICAgQXBpU2VydmljZS5nZXRUb3RhbFVzZXJDb25uZWN0aW9uc1RvZGF5KCksCiAgICAgICAgICBBcGlTZXJ2aWNlLmdldFRvdGFsQmFuZHdpZHRoQ29uc3VtcHRpb25Ub2RheSgpLAogICAgICAgICAgQXBpU2VydmljZS5nZXRBdmdDb25uZWN0aW9uVGltZSgpLAogICAgICAgICAgQXBpU2VydmljZS5nZXRBdmVyYWdlQmFuZHdpZHRoUGVyQ29ubmVjdGlvbigpLAogICAgICAgICAgQXBpU2VydmljZS5nZXRDb3VudEN1cnJlbnRseUNvbm5lY3RlZFVzZXJzUGVyQVAoKSwKICAgICAgICAgIEFwaVNlcnZpY2UuZ2V0Q3VycmVudENvbm5lY3RlZFVzZXJzUGVyQVAoKSwKICAgICAgICAgIEFwaVNlcnZpY2UuZ2V0Q3VycmVudENvbm5lY3RlZEFQcygpLAogICAgICAgIF0pOwoKICAgICAgICAvLyBVcGRhdGUgb3ZlcmFsbCBzdW1tYXJ5IGNhcmRzCiAgICAgICAgdGhpcy5jYXJkc092ZXJhbGxTdW1tYXJ5WzBdLnZhbHVlID0gY291bnRDb25uZWN0ZWRVc2Vyc1Jlc3BvbnNlLmRhdGEuY29ubmVjdGVkVXNlcnM7CiAgICAgICAgdGhpcy5jYXJkc092ZXJhbGxTdW1tYXJ5WzFdLnZhbHVlID0gY291bnRDb25uZWN0ZWRBUHNSZXNwb25zZS5kYXRhLmNvbm5lY3RlZEFQczsKICAgICAgICB0aGlzLmNhcmRzT3ZlcmFsbFN1bW1hcnlbMl0udmFsdWUgPSB0b3RhbFVzZXJDb25uZWN0aW9uc1RvZGF5UmVzcG9uc2UuZGF0YS50b3RhbFVzZXJDb25uZWN0aW9uc1RvZGF5OwogICAgICAgIHRoaXMuY2FyZHNPdmVyYWxsU3VtbWFyeVszXS52YWx1ZSA9IHRvdGFsQmFuZHdpZHRoQ29uc3VtcHRpb25Ub2RheVJlc3BvbnNlLmRhdGEudG90YWxCYW5kd2lkdGhDb25zdW1wdGlvblRvZGF5OwogICAgICAgIHRoaXMuY2FyZHNPdmVyYWxsU3VtbWFyeVs0XS52YWx1ZSA9IGF2Z0Nvbm5lY3Rpb25UaW1lUmVzcG9uc2UuZGF0YS5hdmVyYWdlQ29ubmVjdGlvblRpbWU7CiAgICAgICAgdGhpcy5jYXJkc092ZXJhbGxTdW1tYXJ5WzVdLnZhbHVlID0gYXZnQmFuZHdpZHRoQ29ubmVjdGlvblJlc3BvbnNlLmRhdGEuYXZlcmFnZUJhbmR3aWR0aFBlckNvbm5lY3Rpb247CgogICAgICAgIC8vIENvbnZlcnQgYXJyYXkgdG8gbWFwCiAgICAgICAgdGhpcy5jb25uZWN0ZWRVc2Vyc1BlckFQTWFwID0ge307CiAgICAgICAgY291bnRDb25uZWN0ZWRVc2Vyc1BlckFwUmVzcG9uc2UuZGF0YS5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAgICAgICB0aGlzLmNvbm5lY3RlZFVzZXJzUGVyQVBNYXBbaXRlbS5hcE1hY0FkZHJlc3NdID0gaXRlbS51c2VyQ291bnQ7CiAgICAgICAgfSk7CgogICAgICAgIC8vIFN0b3JlIGFsbCBjb25uZWN0ZWQgdXNlcnMgZGF0YQogICAgICAgIHRoaXMuYWxsQ29ubmVjdGVkVXNlcnNEYXRhID0gY29ubmVjdGVkVXNlcnNQZXJBcFJlc3BvbnNlLmRhdGE7CgogICAgICAgIC8vIFNldHVwIG9wdGlvbnMgZm9yIHRoZSBzZWxlY3QgZmllbGQKICAgICAgICB0aGlzLmN1cnJlbnRDb25uZWN0ZWRBUHMgPSBjdXJyZW50Q29ubmVjdGVkQVBzLmRhdGEuZGF0YTsKICAgICAgICB0aGlzLmFjY2Vzc1BvaW50T3B0aW9ucyA9IHRoaXMuY3VycmVudENvbm5lY3RlZEFQcy5tYXAoKGFwKSA9PiAoewogICAgICAgICAgdGV4dDogYXAsCiAgICAgICAgICB2YWx1ZTogYXAsCiAgICAgICAgfSkpOwoKICAgICAgICAvLyBPcHRpb25hbGx5IHByZS1zZWxlY3QgdGhlIGZpcnN0IGFjY2VzcyBwb2ludAogICAgICAgIGlmICh0aGlzLmFjY2Vzc1BvaW50T3B0aW9ucy5sZW5ndGggPiAwKSB7CiAgICAgICAgICB0aGlzLnNlbGVjdGVkQWNjZXNzUG9pbnQgPSB0aGlzLmFjY2Vzc1BvaW50T3B0aW9uc1swXS52YWx1ZTsKICAgICAgICAgIHRoaXMuY29ubmVjdGVkVXNlcnNQZXJBUCA9IHRoaXMuY29ubmVjdGVkVXNlcnNQZXJBUE1hcFt0aGlzLnNlbGVjdGVkQWNjZXNzUG9pbnRdIHx8IDA7CiAgICAgICAgICB0aGlzLmNhcmRzQVBbMF0udmFsdWUgPSB0aGlzLmNvbm5lY3RlZFVzZXJzUGVyQVA7CiAgICAgICAgICB0aGlzLmxvYWRVc2Vyc0ZvclNlbGVjdGVkQVAoKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgZGF0YTogJywgZXJyb3IpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICB9CiAgICB9LAogICAgb25BUENoYW5nZShzZWxlY3RlZEFjY2Vzc1BvaW50KSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRBY2Nlc3NQb2ludCA9IHNlbGVjdGVkQWNjZXNzUG9pbnQ7CiAgICAgIHRoaXMubG9hZFVzZXJzRm9yU2VsZWN0ZWRBUCgpOwogICAgfSwKICAgIGxvYWRVc2Vyc0ZvclNlbGVjdGVkQVAoKSB7CiAgICAgIGlmICghdGhpcy5zZWxlY3RlZEFjY2Vzc1BvaW50KSByZXR1cm47CiAgICAgIC8vIFVwZGF0ZSB0aGUgY291bnQgb2YgY29ubmVjdGVkIHVzZXJzCiAgICAgIHRoaXMuY29ubmVjdGVkVXNlcnNQZXJBUCA9IHRoaXMuY29ubmVjdGVkVXNlcnNQZXJBUE1hcFt0aGlzLnNlbGVjdGVkQWNjZXNzUG9pbnRdIHx8IDA7CiAgICAgIC8vIFVwZGF0ZSB0aGUgY2FyZCB2YWx1ZQogICAgICB0aGlzLmNhcmRzQVBbMF0udmFsdWUgPSB0aGlzLmNvbm5lY3RlZFVzZXJzUGVyQVA7CiAgICAgIC8vIEZpbmQgdGhlIEFQIGRhdGEgaW4gYWxsQ29ubmVjdGVkVXNlcnNEYXRhCiAgICAgIGNvbnN0IGFwRGF0YSA9IHRoaXMuYWxsQ29ubmVjdGVkVXNlcnNEYXRhLmZpbmQoCiAgICAgICAgKGFwKSA9PiBhcC5hcE1hY0FkZHJlc3MgPT09IHRoaXMuc2VsZWN0ZWRBY2Nlc3NQb2ludCwKICAgICAgKTsKICAgICAgLy8gVXBkYXRlIHRoZSBjb25uZWN0ZWQgdXNlcnMgdGFibGUgZGF0YQogICAgICB0aGlzLmNvbm5lY3RlZFVzZXJzID0gYXBEYXRhID8gYXBEYXRhLmNvbm5lY3RlZFVzZXJzIDogW107CiAgICB9LAogICAgZm9ybWF0Q2FyZFZhbHVlKGNhcmQpIHsKICAgICAgaWYgKGNhcmQudGl0bGUgPT09ICdUb3RhbCBCYW5kd2lkdGggQ29uc3VtcHRpb24gZm9yIFRvZGF5JyB8fCBjYXJkLnRpdGxlID09PSAnQXZlcmFnZSBCYW5kd2lkdGggUGVyIENvbm5lY3Rpb24nKSB7CiAgICAgICAgcmV0dXJuIGAke2NhcmQudmFsdWV9IE1CYDsKICAgICAgfQogICAgICBpZiAoY2FyZC50aXRsZSA9PT0gJ0F2ZXJhZ2UgQ29ubmVjdGlvbiBUaW1lJykgewogICAgICAgIHJldHVybiBgJHtjYXJkLnZhbHVlfSBNSU5TYDsKICAgICAgfQogICAgICByZXR1cm4gY2FyZC52YWx1ZTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["Monitoring.vue"],"names":[],"mappings":";AAmfile":"Monitoring.vue","sourceRoot":"src/views/components","sourcesContent":["<template>\n  <v-container\n    fluid\n    class=\"pa-5\"\n  >\n    <!-- Overall Summary -->\n    <v-card class=\"pa-4 mb-6\">\n      <v-card-title class=\"pa-0\">\n        Overall Summary\n      </v-card-title>\n      <v-row>\n        <v-col\n          v-for=\"(card, index) in cardsOverallSummary\"\n          :key=\"index\"\n          cols=\"12\"\n          sm=\"6\"\n          md=\"4\"\n        >\n          <v-card\n            :style=\"{backgroundColor: card.color}\"\n          >\n            <v-card-title\n              class=\"font-weight-bold display-2 text-right\"\n              style=\"text-align: right; display: block; color: white;\"\n            >\n              {{ formatCardValue(card) }}\n              <!-- {{ card.value }} -->\n            </v-card-title>\n            <v-card-text\n              class=\"text-right text-subtitle-2\"\n              style=\"color: white;\"\n            >\n              {{ card.title }}\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-card>\n\n    <!-- List of APs / Data per AP -->\n    <v-card class=\"pa-4 mb-6\">\n      <v-row\n        align=\"center\"\n        class=\"ma-0\"\n      >\n        <v-col class=\"pa-0\">\n          <v-card-title class=\"pa-0 mb-3\">\n            List of Access Points / Data Per Access Point\n          </v-card-title>\n        </v-col>\n        <v-col\n          class=\"pa-0\"\n          cols=\"auto\"\n        >\n          <v-select\n            v-model=\"selectedAccessPoint\"\n            flat\n            solo-inverted\n            hide-details\n            :items=\"accessPointOptions\"\n            item-text=\"text\"\n            item-value=\"value\"\n            style=\"width: 20em;\"\n            label=\"Select Access Point (AP)\"\n            @change=\"onAPChange\"\n          />\n        </v-col>\n      </v-row>\n      <v-col class=\"pa-0\">\n        <v-row>\n          <v-col\n            v-for=\"(card, index) in cardsAP\"\n            :key=\"index\"\n            cols=\"12\"\n            sm=\"6\"\n            md=\"4\"\n          >\n            <v-card\n              :style=\"{backgroundColor: card.color}\"\n            >\n              <v-card-title\n                class=\"font-weight-bold display-2 text-right\"\n                style=\"text-align: right; display: block; color: white;\"\n              >\n                {{ card.value }}\n              </v-card-title>\n              <v-card-text\n                class=\"text-right text-subtitle-2\"\n                style=\"color: white;\"\n              >\n                {{ card.title }}\n              </v-card-text>\n            </v-card>\n          </v-col>\n        </v-row>\n\n        <!-- Table for list of currently connected users per access point -->\n        <v-card class=\"mt-3\">\n          <v-card-title>\n            List of Currently Connected Users\n            <!-- <v-spacer />\n            <v-text-field\n              v-model=\"search\"\n              append-icon=\"mdi-magnify\"\n              label=\"Search\"\n              single-line\n              hide-details\n            /> -->\n          </v-card-title>\n          <div style=\"overflow-x: auto;\">\n            <v-data-table\n              dense\n              :headers=\"headers\"\n              :items=\"connectedUsers\"\n              item-key=\"macAddress\"\n              :loading=\"loading\"\n              loading-text=\"Loading... Please wait\"\n              style=\"min-width: 1000px\"\n              class=\"header-nowrap\"\n            >\n              <template v-slot:item.bandwidthMB=\"{ item }\">\n                {{ item.bandwidthMB }} MB\n              </template>\n            </v-data-table>\n          </div>\n        </v-card>\n      </v-col>\n    </v-card>\n\n    <!-- List of Connected Users -->\n    <!-- <v-card>\n      <v-card-title>\n        List of Connected Users\n      </v-card-title>\n      <v-data-table\n        dense\n        :headers=\"headersConnectedUsers\"\n        :items=\"listOfConnectedUsers\"\n        item-key=\"macAddress\"\n        :loading=\"loading\"\n        loading-text=\"Loading... Please wait\"\n      />\n    </v-card> -->\n  </v-container>\n</template>\n\n<script>\nimport ApiService from '../../api.service';\n\nexport default {\n  data() {\n    return {\n      cardsOverallSummary: [\n        {\n          title: 'Current Number of Connected Users',\n          value: 0,\n          color: '#66BB6A',\n          key: 'connectedUsers',\n        },\n        {\n          title: 'Current Number of Connected APs',\n          value: 0,\n          color: '#4DB6AC',\n          key: 'connectedAPs',\n        },\n        {\n          title: 'Total User Connections for Today',\n          value: 0,\n          color: '#FFB74D',\n          key: 'totalUserConnectionsToday',\n        },\n        {\n          title: 'Total Bandwidth Consumption for Today',\n          value: 0,\n          color: '#FDD835',\n          key: 'totalBandwidthConsumptionToday',\n        },\n        {\n          title: 'Average Connection Time',\n          value: 0,\n          color: '#1E88E5',\n          key: 'averageConnectionTime',\n        },\n        {\n          title: 'Average Bandwidth Per Connection',\n          value: 0,\n          color: '#E57373',\n          key: 'averageBandwidthPerConnection',\n        },\n      ],\n      cardsAP: [\n        {\n          title: 'Currently Connected Users',\n          value: 0,\n          color: '#66BB6A',\n          key: 'connectedUsersPerAP',\n        },\n        // {\n        //   title: 'Daily Average Connected Users',\n        //   value: 0,\n        //   color: '#4DB6AC',\n        // },\n        // {\n        //   title: 'Daily Average User Connection Time',\n        //   value: 0,\n        //   color: '#FFB74D',\n        // },\n        // {\n        //   title: 'Daily Average Bandwidth Consumption',\n        //   value: 0,\n        //   color: '#FDD835',\n        // },\n        // {\n        //   title: 'Daily Average Bandwidth Consumption Per User',\n        //   value: 0,\n        //   color: '#1E88E5',\n        // },\n      ],\n      headers: [\n        {\n          text: 'Account Number',\n          align: 'start',\n          sortable: true,\n          value: 'accountNumber',\n        },\n        {\n          text: 'Package',\n          align: 'start',\n          sortable: true,\n          value: 'package',\n        },\n        {\n          text: 'MAC Address',\n          align: 'start',\n          sortable: true,\n          value: 'macAddress',\n        },\n        {\n          text: 'Device',\n          align: 'start',\n          sortable: false,\n          value: 'device',\n        },\n        {\n          text: 'IP Address',\n          align: 'start',\n          sortable: true,\n          value: 'ipAddress',\n        },\n        {\n          text: 'SSID',\n          align: 'start',\n          sortable: true,\n          value: 'ssid',\n        },\n        {\n          text: 'Bandwidth Consumption',\n          align: 'start',\n          sortable: true,\n          value: 'bandwidthMB',\n        },\n        {\n          text: 'Time Connected',\n          align: 'start',\n          sortable: true,\n          value: 'lastActive',\n        },\n      ],\n      headersConnectedUsers: [\n        {\n          text: 'Account Number',\n          align: 'start',\n          sortable: true,\n          value: 'accountNumber',\n        },\n        {\n          text: 'Package',\n          align: 'start',\n          sortable: true,\n          value: 'package',\n        },\n        {\n          text: 'MAC Address',\n          align: 'start',\n          sortable: true,\n          value: 'macAddress',\n        },\n        {\n          text: 'Device',\n          align: 'start',\n          sortable: true,\n          value: 'device',\n        },\n        {\n          text: 'IP Address',\n          align: 'start',\n          sortable: true,\n          value: 'ipAddress',\n        },\n        {\n          text: 'Connection Time',\n          align: 'start',\n          sortable: true,\n          value: 'connectionTime',\n        },\n        {\n          text: 'Bandwidth Consumption',\n          align: 'start',\n          sortable: true,\n          value: 'bandwidthConsumption',\n        },\n      ],\n      connectedUsersPerAP: 0,\n      connectedUsersPerAPMap: {},\n      connectedUsers: [],\n      allConnectedUsersData: [],\n      currentConnectedAPs: [],\n      accessPointOptions: [],\n      selectedAccessPoint: null,\n      loading: false,\n    };\n  },\n  async created() {\n    await this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        this.loading = true;\n\n        // Fetch all data in parallel\n        const [\n          countConnectedUsersResponse,\n          countConnectedAPsResponse,\n          totalUserConnectionsTodayResponse,\n          totalBandwidthConsumptionTodayResponse,\n          avgConnectionTimeResponse,\n          avgBandwidthConnectionResponse,\n          countConnectedUsersPerApResponse,\n          connectedUsersPerApResponse,\n          currentConnectedAPs,\n        ] = await Promise.all([\n          ApiService.getCountConnectedUsers(),\n          ApiService.getCountCurrentConnectedAPs(),\n          ApiService.getTotalUserConnectionsToday(),\n          ApiService.getTotalBandwidthConsumptionToday(),\n          ApiService.getAvgConnectionTime(),\n          ApiService.getAverageBandwidthPerConnection(),\n          ApiService.getCountCurrentlyConnectedUsersPerAP(),\n          ApiService.getCurrentConnectedUsersPerAP(),\n          ApiService.getCurrentConnectedAPs(),\n        ]);\n\n        // Update overall summary cards\n        this.cardsOverallSummary[0].value = countConnectedUsersResponse.data.connectedUsers;\n        this.cardsOverallSummary[1].value = countConnectedAPsResponse.data.connectedAPs;\n        this.cardsOverallSummary[2].value = totalUserConnectionsTodayResponse.data.totalUserConnectionsToday;\n        this.cardsOverallSummary[3].value = totalBandwidthConsumptionTodayResponse.data.totalBandwidthConsumptionToday;\n        this.cardsOverallSummary[4].value = avgConnectionTimeResponse.data.averageConnectionTime;\n        this.cardsOverallSummary[5].value = avgBandwidthConnectionResponse.data.averageBandwidthPerConnection;\n\n        // Convert array to map\n        this.connectedUsersPerAPMap = {};\n        countConnectedUsersPerApResponse.data.forEach((item) => {\n          this.connectedUsersPerAPMap[item.apMacAddress] = item.userCount;\n        });\n\n        // Store all connected users data\n        this.allConnectedUsersData = connectedUsersPerApResponse.data;\n\n        // Setup options for the select field\n        this.currentConnectedAPs = currentConnectedAPs.data.data;\n        this.accessPointOptions = this.currentConnectedAPs.map((ap) => ({\n          text: ap,\n          value: ap,\n        }));\n\n        // Optionally pre-select the first access point\n        if (this.accessPointOptions.length > 0) {\n          this.selectedAccessPoint = this.accessPointOptions[0].value;\n          this.connectedUsersPerAP = this.connectedUsersPerAPMap[this.selectedAccessPoint] || 0;\n          this.cardsAP[0].value = this.connectedUsersPerAP;\n          this.loadUsersForSelectedAP();\n        }\n      } catch (error) {\n        console.error('Error fetching data: ', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    onAPChange(selectedAccessPoint) {\n      this.selectedAccessPoint = selectedAccessPoint;\n      this.loadUsersForSelectedAP();\n    },\n    loadUsersForSelectedAP() {\n      if (!this.selectedAccessPoint) return;\n      // Update the count of connected users\n      this.connectedUsersPerAP = this.connectedUsersPerAPMap[this.selectedAccessPoint] || 0;\n      // Update the card value\n      this.cardsAP[0].value = this.connectedUsersPerAP;\n      // Find the AP data in allConnectedUsersData\n      const apData = this.allConnectedUsersData.find(\n        (ap) => ap.apMacAddress === this.selectedAccessPoint,\n      );\n      // Update the connected users table data\n      this.connectedUsers = apData ? apData.connectedUsers : [];\n    },\n    formatCardValue(card) {\n      if (card.title === 'Total Bandwidth Consumption for Today' || card.title === 'Average Bandwidth Per Connection') {\n        return `${card.value} MB`;\n      }\n      if (card.title === 'Average Connection Time') {\n        return `${card.value} MINS`;\n      }\n      return card.value;\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Prevent header text wrapping and center vertically */\n.header-nowrap >>> th {\n  white-space: nowrap;\n  vertical-align: middle !important;\n}\n\n/* Ensure table cells don't wrap either */\n.header-nowrap >>> td {\n  white-space: nowrap;\n}\n\n/* Optional: Add some padding to headers for better appearance */\n.header-nowrap >>> th {\n  padding: 0 16px !important;\n}\n</style>"]}]}